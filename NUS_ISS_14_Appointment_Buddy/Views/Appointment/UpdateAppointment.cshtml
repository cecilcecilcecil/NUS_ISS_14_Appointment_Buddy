@using AppointmentBuddy.Core.Common.Helper
@model NUS_ISS_14_Appointment_Buddy.Models.Appointment

@{
    ViewData["Title"] = "Assign Appointment";
}
@using (Html.BeginForm("SaveAppointment", "Appointment", FormMethod.Post, new { @id = "AppointmentForm" }))
{
    @Html.AntiForgeryToken()

    <div class="_page-essentials">
        <div class="well">
            <div class="_content">
                <h2>Update Appointment</h2>
            </div>
        </div>
        <div class="_step-body">
            <div class="_content">
                <div class="_project-content">
                    <div class="bids-width">
                        <div class="row">
                            <div class="col-md-4">
                                Appointment Date:
                            </div>
                            <div class="col-md-4">
                                @Html.DisplayFor(x => x.AppointmentDate)
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                Appointment Time:
                            </div>
                            <div class="col-md-4">
                                @Html.DisplayFor(x => x.AppointmentTime)
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                Assigned Patient:
                            </div>
                            <div class="col-md-8">
                                <div class="_form-group">
                                    @Html.DropDownListFor(model => model.UserId, (IEnumerable<SelectListItem>)ViewBag.Patients, "Please Select Patient",
                                    new { @class = "_category wide", id = "patientDrop" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                Service:
                            </div>
                            <div class="col-md-8">
                                <div class="_form-group">
                                    @Html.DropDownListFor(model => model.ServiceId, (IEnumerable<SelectListItem>)ViewBag.Services, "Please Select Service",
                                    new { @class = "_category wide", id = "svcDrop" })
                                </div>
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                Specialist:
                            </div>
                            <div class="col-md-8">
                                @if (string.IsNullOrEmpty(Model.SpecialistId))
                                {
                                    <div class="_form-group">
                                        @Html.DropDownListFor(model => model.SpecialistId, (IEnumerable<SelectListItem>)ViewBag.Specialists, "Please Select Specialist",
                                        new { @class = "_category wide text-bg-readonly", id = "specDrop", @disabled = "disabled" })
                                    </div>
                                }
                                else
                                {
                                    <div class="_form-group">
                                        @Html.DropDownListFor(model => model.SpecialistId, (IEnumerable<SelectListItem>)ViewBag.Specialists, "Please Select Specialist",
                                        new { @class = "_category wide", id = "specDrop" })
                                    </div>
                                }
                            </div>
                        </div>
                        <div class="row">
                            <div class="col-md-4">
                                Room:
                            </div>
                            <div class="col-md-8">
                                @if (string.IsNullOrEmpty(Model.RoomId))
                                {
                                    <div class="_form-group">
                                        @Html.DropDownListFor(model => model.RoomId, (IEnumerable<SelectListItem>)ViewBag.Rooms, "Please Select Room",
                                        new { @class = "_category wide text-bg-readonly", id = "roomDrop", @disabled = "disabled" })
                                    </div>
                                }
                                else
                                {
                                    <div class="_form-group">
                                        @Html.DropDownListFor(model => model.RoomId, (IEnumerable<SelectListItem>)ViewBag.Rooms, "Please Select Room",
                                        new { @class = "_category wide", id = "roomDrop" })
                                    </div>
                                }
                            </div>
                        </div>
                    </div>
                </div>
                <div class="_project-content">
                    <div class="bids-width _contact-details">
                        <div class="row">
                            <div class="col-md-12">
                                <div class="autosave-container">
                                    <div class="autosave-wrapper">
                                        <h4 class="autosave-msg"></h4>
                                        <div class="_nxt-prv">
                                            <button class="_transparent" id="deleteBtn">delete</button>
                                            <button class="_transparent cancelBtn">cancel</button>
                                            <button class="red-btn" id="assignBtn">assign</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <partial name="_ErrorModal" />
            <partial name="_ConfirmModal" />
            <partial name="_SubmitModal" />
            <partial name="_SavingModal" />
            @Html.HiddenFor(x => x.AppointmentId)
            @Html.HiddenFor(x => x.AppointmentDate)
            @Html.HiddenFor(x => x.AppointmentTime)
            @Html.HiddenFor(x => x.UserId)
            @Html.HiddenFor(x => x.Name)
        </div>
    </div>
}

<script type="text/javascript" nonce="@ViewData["Nonce"]">
    $(document).ready(function () {
        $('#AppointmentForm').submit(function (e) { e.preventDefault(); });

        $('#assignBtn').click(function () {
            this.blur();

            if ($('#apptDate').val() == '' || $('#apptTime').val() == '') {

            }
            else {
                $('#cfmMsg').text('Assigning Patient');
                document.getElementById('confirmationBox').style.display = 'block';
            }
        });

        $('#svcDrop').change(function () {

            var list = $('#specDrop');
            var rmList = $('#roomDrop');

            if ($(this).val() != '') {
                $.getJSON('@Url.Action("GetSpecialistByServiceId", "Appointment")', { serviceId: $(this).val() }, function (data) {
                    list.find('option').remove();
                    $(data).each(function (index, dataitem) { list.append('<option value="' + dataitem.value + '">' + dataitem.text + '</option>'); });
                    list.val(''); list.prop('disabled', false); list.removeClass('text-bg-readonly');
                    list.niceSelect('update');
                });

                $.getJSON('@Url.Action("GetRoomByServiceId", "Appointment")', { serviceId: $(this).val() }, function (data) {
                    rmList.find('option').remove();
                    $(data).each(function (index, dataitem) { rmList.append('<option value="' + dataitem.value + '">' + dataitem.text + '</option>'); });
                    rmList.val(''); rmList.prop('disabled', false); rmList.removeClass('text-bg-readonly');
                    rmList.niceSelect('update');
                });
            }

            else {
                list.find('option').remove(); list.append('<option value="">' + 'Please select service' + '</option>');
                list.val(''); list.prop('disabled', true); list.addClass('text-bg-readonly'); list.niceSelect('update');

                rmList.find('option').remove(); list.append('<option value="">' + 'Please select room' + '</option>');
                rmList.val(''); rmList.prop('disabled', true); rmList.addClass('text-bg-readonly'); rmList.niceSelect('update');
            }
        });

        $('#patientDrop').change(function () {
            $('#UserId').val(this.value);
            $('#Name').val($("#patientDrop option:selected").text());
        });

        $('#confirmBox').click(function () {
            document.getElementById('confirmationBox').style.display = 'none';
            SaveAppointment();
        });

        $('#closeBox').click(function () {
            document.getElementById('submitSuccessBox').style.display = "none";

            window.location.href = '@Url.Action("Index", "Appointment")';
        });

        $('.cancelBtn').click(function () {
            window.location.href = '@Url.Action("Index", "Appointment")';
        });

        $('#closeErrorBox').click(function () { document.getElementById('errorMsgBox').style.display = 'none'; });
        $('#cancelBox').click(function () { document.getElementById('confirmationBox').style.display = 'none'; });

    });

    function SaveAppointment() {
        var formData = $('#AppointmentForm').serializeArray();

        var savingModal = document.getElementById("savingInProgress");
        savingModal.style.display = "block";

        $.ajax({
            type: 'POST',
            data: formData,
            dataType: 'json',
            url: '@Url.Action("SaveAppointment", "Appointment")',
            success: function (result) {
                savingModal.style.display = "none";

                if (result.successVal == '@Constants.ErrorCodes.Success') {
                    document.getElementById('submitSuccessBox').style.display = 'block';
                }
                else {
                    $(window).scrollTop(0);
                    document.getElementById("errorMsgValue").innerHTML = result.autosaveDate;
                    document.getElementById("errorMsgBox").style.display = "block";
                }
            },
            error: function () {
                savingModal.style.display = "none";
                document.getElementById("errorMsgBox").style.display = "block";
            }
        });
    }
</script>

